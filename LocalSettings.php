<?php
# This file was automatically generated by the MediaWiki 1.35.5
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

require_once "/external_includes/dbconn.php";

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "my_wiki";
$wgMetaNamespace = "My_wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://localhost:8080";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/wiki.png" ];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

# Moved to file ./secrets/dbconn

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
# Move to file ./secrets/dbconn.php

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "de";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place


## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfBook' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'WikiEditor' );
wfLoadExtension( 'PageForms' );
wfLoadExtension( 'AdminLinks' );
wfLoadExtension( 'HeaderTabs' );
wfLoadExtension( 'SimpleBatchUpload' );
#wfLoadExtension( 'UploadWizard' );
wfLoadExtension( 'SemanticMediaWiki' );


# End of automatically generated settings.
# Add more configuration options below.

enableSemantics( 'example.org' );

$wgExtensionFunctions[] = function() {
	$GLOBALS['wgUploadNavigationUrl'] = SpecialPage::getTitleFor( 'BatchUpload' )->getLocalURL();
	return true;
};

#$wgUploadWizardConfig = [
#	'debug' => false,
#	'autoAdd' => [
#	 	'wikitext' => [
#			'This file was uploaded with the UploadWizard extension.'
#			],
#	 	'categories' => [
#	 		 'Uploaded with UploadWizard'	
#	 		 ],
#		], // Should be localised to the language of your wiki instance
#	'defaults' => [
#		// Categories to list by default in the list of cats to add.
#		'categories' => [],
#		// Initial value for the caption field.
#		'caption' => 'Bildunterschrift',
#		// Initial value for the description field.
#		'description' => 'Bildbeschreibung',
#		// These values are commented out by default, so they can be undefined
#		// Define them here if you want defaults.
#		// This is required, because the JsonSchema for these defines them to be type number
#		// But we can't have them to be NULL, because that's not a number.
#		// This is a technical limitation of JsonSchema, I think.
#		//// Initial value for the latitude field.
#		//'lat' => 0,
#		//// Initial value for the longitude field.
#		//'lon' => 0,
#		//// Initial value for the altitude field. (unused)
#		//'alt' => 0,
#		//// Initial value for the heading field.
#		//'heading' => 0,
#	],
#	'feedbackPage' => 'Feedback about UploadWizard',
#	'altUploadForm' => 'Special:Upload',
#	'feedbackLink' => false, // Disable the link for feedback (default: points to Commons)
#	'alternativeUploadToolsPage' => false, // Disable the link to alternative upload tools (default: points to Commons)
#	'enableFormData' => true, // Enable FileAPI uploads be used on supported browsers
#	'enableMultipleFiles' => true,
#	'enableMultiFileSelect' => false,
#	'uwLanguages' => [
#		'de' => 'Deutsch'
#		], // Selectable languages for file descriptions - defaults to 'en'
#	'tutorial' => [
#	 	'skip' => true
#		], // Skip the tutorial
#	'maxUploads' => 15, // Number of uploads with one form - defaults to 50
#	'fileExtensions' => $wgFileExtensions, // omitting this may cause errors
#	'licensing' => [
#		'ownWorkDefault' => 'own',
#		'ownWork' => [
#			'type' => 'or',
#			'template' => 'licensing', // this adds a link to Template:Licensing to the file info page
			// 'licenses' => [
				// 'generic',
			// ],
		// ],
	// ],
    // 'minDescriptionLength' => 5,
// ];